/* sanitize.css | CC0 Public Domain | github.com/jonathantneal/sanitize.css */
/*
 * Normalization
 */
:root {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;
}
audio:not([controls]) {
  display: none;
}
details {
  display: block;
}
input[type="number"] {
  width: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
main {
  display: block;
}
summary {
  display: block;
}
pre {
  overflow: auto;
}
progress {
  display: inline-block;
}
small {
  font-size: 75%;
}
template {
  display: none;
}
textarea {
  overflow: auto;
}
[hidden] {
  display: none;
}
[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
/*
 * Universal inheritance
 */
*,
::before,
::after {
  box-sizing: inherit;
}
* {
  font-size: inherit;
  line-height: inherit;
}
::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit;
}
/*
 * Opinionated defaults
 */
*,
::before,
::after {
  border-style: solid;
  border-width: 0;
}
* {
  margin: 0;
  padding: 0;
}
:root {
  box-sizing: border-box;
  cursor: default;
  font: 16px/1.5 sans-serif;
  text-rendering: optimizeLegibility;
}
html {
  background-color: #fff;
}
a {
  text-decoration: none;
}
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}
button,
input,
select,
textarea {
  background-color: transparent;
}
button,
input,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit;
}
button,
[type="button"],
[type="date"],
[type="datetime"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="reset"],
[type="search"],
[type="submit"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
select,
textarea {
  min-height: 1.5em;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
}
nav ol,
nav ul {
  list-style: none;
}
select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
select::-ms-expand {
  display: none;
}
select::-ms-value {
  color: currentColor;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
textarea {
  resize: vertical;
}
::-moz-selection {
  background-color: #b3d4fc;
  text-shadow: none;
}
::selection {
  background-color: #b3d4fc;
  text-shadow: none;
}
@media screen {
  [hidden~="screen"] {
    display: inherit;
  }
  [hidden~="screen"]:not(:active):not(:focus):not(:target) {
    clip: rect(0 0 0 0) !important;
    position: absolute !important;
  }
}
.ui-example {
  padding: 1.5em;
}
.ui-example-title {
  font-size: 2.5em;
}
.ui-example-desc {
  color: #333;
}
/*# sourceMappingURL=data:application/json;base64, */